/*
 * Automatically Generated from Mathematica.
 * Thu 31 Mar 2022 15:52:42 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <eigen3/Eigen/Dense>

#include "gen/kin/p_left_hand_wrt_base.hh"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

INLINE double Sec(double x) { return 1/cos(x); }
INLINE double Csc(double x) { return 1/sin(x); }

/*
 * Sub functions
 */
static void output1(Eigen::Ref<Eigen::VectorXd> p_output1,const Eigen::Ref<const Eigen::VectorXd> var1,const Eigen::Ref<const Eigen::VectorXd> var2)
{
  double t1265;
  double t1367;
  double t1468;
  double t1470;
  double t1475;
  double t1484;
  double t1490;
  double t1502;
  double t1491;
  double t1507;
  double t1387;
  double t1398;
  double t1411;
  double t1430;
  double t1499;
  double t1511;
  double t1515;
  double t1540;
  double t1541;
  double t1542;
  double t1611;
  double t1613;
  double t1614;
  double t1620;
  double t1379;
  double t1563;
  double t1564;
  double t1566;
  double t1600;
  double t1601;
  double t1603;
  double t1616;
  double t1666;
  double t1632;
  double t1729;
  double t1652;
  double t1653;
  double t1654;
  double t1655;
  double t1656;
  double t1661;
  double t1722;
  double t1698;
  double t1699;
  double t1700;
  double t1709;
  double t1712;
  double t1717;
  double t1735;
  double t1737;
  double t1742;
  double t1743;
  double t1748;
  double t1749;
  double t1755;
  double t1759;
  double t1761;
  double t1763;
  double t1624;
  double t1766;
  double t1633;
  double t1801;
  double t1688;
  double t1772;
  double t1679;
  double t1770;
  double t1771;
  double t1773;
  double t1778;
  double t1779;
  double t1782;
  double t1783;
  double t1787;
  double t1795;
  double t1797;
  double t1798;
  double t1802;
  double t1805;
  double t1806;
  double t1807;
  double t1810;
  double t1836;
  double t1837;
  double t1838;
  double t1839;
  double t1840;
  double t1841;
  double t1842;
  double t1843;
  double t1845;
  double t1846;
  double t1848;
  double t1849;
  double t1850;
  double t1851;
  double t1854;
  double t1855;
  double t1857;
  double t1858;
  double t1862;
  double t1863;
  double t1865;
  double t1866;
  double t1868;
  double t1869;
  double t1870;
  double t1871;
  double t1426;
  double t1439;
  double t1444;
  double t1480;
  double t1485;
  double t1489;
  double t1529;
  double t1530;
  double t1532;
  double t1556;
  double t1557;
  double t1561;
  double t1562;
  double t1899;
  double t1901;
  double t1902;
  double t1905;
  double t1906;
  double t1907;
  double t1579;
  double t1586;
  double t1587;
  double t1599;
  double t1610;
  double t1615;
  double t1627;
  double t1631;
  double t1634;
  double t1638;
  double t1639;
  double t1910;
  double t1911;
  double t1912;
  double t1915;
  double t1916;
  double t1918;
  double t1664;
  double t1665;
  double t1685;
  double t1687;
  double t1689;
  double t1690;
  double t1696;
  double t1720;
  double t1721;
  double t1726;
  double t1727;
  double t1730;
  double t1732;
  double t1733;
  double t1762;
  double t1764;
  double t1765;
  double t1922;
  double t1923;
  double t1924;
  double t1925;
  double t1928;
  double t1930;
  double t1931;
  double t1932;
  double t1934;
  double t1936;
  double t1938;
  double t1939;
  double t1790;
  double t1792;
  double t1793;
  double t1794;
  double t1818;
  double t1830;
  double t1833;
  double t1834;
  double t1941;
  double t1942;
  double t1943;
  double t1944;
  double t1947;
  double t1948;
  double t1951;
  double t1953;
  double t1958;
  double t1961;
  double t1962;
  double t1963;
  double t1965;
  double t1966;
  double t1969;
  double t1970;
  double t1973;
  double t1974;
  double t1975;
  double t1976;
  double t1978;
  double t1980;
  double t1981;
  double t1982;
  double t1897;
  double t1445;
  double t1526;
  double t1546;
  double t1568;
  double t1605;
  double t1662;
  double t1719;
  double t1750;
  double t1788;
  double t1814;
  double t1844;
  double t1853;
  double t1864;
  double t1873;
  double t1875;
  double t1876;
  double t1881;
  double t1885;
  double t1887;
  double t1891;
  double t1892;
  double t1893;
  double t1894;
  double t1895;
  double t1898;
  double t1903;
  double t1909;
  double t1914;
  double t1920;
  double t1926;
  double t1933;
  double t1940;
  double t1946;
  double t1957;
  double t1964;
  double t1971;
  double t1977;
  double t1984;
  double t1985;
  double t1988;
  double t1989;
  double t1992;
  double t1993;
  double t1994;
  double t1995;
  double t1996;
  double t1997;
  double t1998;
  double t1363;
  double t1896;
  double t1999;
  double t2001;
  double t2004;
  double t2005;
  double t2006;
  double t2007;
  double t2023;
  double t2024;
  double t2025;
  double t2028;
  double t2029;
  double t2031;
  double t2033;
  double t2034;
  double t2035;
  double t2036;
  double t2039;
  double t2041;
  double t2042;
  double t2044;
  double t2046;
  double t2047;
  double t2048;
  double t2049;
  double t2054;
  double t2055;
  double t2056;
  double t2058;
  double t2062;
  double t2063;
  double t2069;
  double t2070;
  double t2072;
  double t2073;
  double t2075;
  double t2076;
  double t2078;
  double t2079;
  double t2080;
  double t2081;
  double t2084;
  double t2085;
  double t2086;
  double t2087;
  double t2089;
  double t2090;
  double t2091;
  double t2092;
  t1265 = Sin(var2[0]);
  t1367 = Cos(var1[3]);
  t1468 = Cos(var1[14]);
  t1470 = -1.*t1468;
  t1475 = 1. + t1470;
  t1484 = Sin(var1[14]);
  t1490 = Cos(var1[5]);
  t1502 = Sin(var1[3]);
  t1491 = Sin(var1[4]);
  t1507 = Sin(var1[5]);
  t1387 = Cos(var1[15]);
  t1398 = -1.*t1387;
  t1411 = 1. + t1398;
  t1430 = Sin(var1[15]);
  t1499 = t1367*t1490*t1491;
  t1511 = t1502*t1507;
  t1515 = t1499 + t1511;
  t1540 = -1.*t1490*t1502;
  t1541 = t1367*t1491*t1507;
  t1542 = t1540 + t1541;
  t1611 = Cos(var1[16]);
  t1613 = -1.*t1611;
  t1614 = 1. + t1613;
  t1620 = Sin(var1[16]);
  t1379 = Cos(var1[4]);
  t1563 = -1.*t1484*t1515;
  t1564 = t1468*t1542;
  t1566 = t1563 + t1564;
  t1600 = t1468*t1515;
  t1601 = t1484*t1542;
  t1603 = t1600 + t1601;
  t1616 = 0.051978134642000004*t1614;
  t1666 = -0.05226439969100001*t1614;
  t1632 = 0.49726168403800003*t1614;
  t1729 = -0.073913*t1620;
  t1652 = 0.994522*t1367*t1379*t1430;
  t1653 = 0.103955395616*t1411*t1566;
  t1654 = -0.9890740084840001*t1411;
  t1655 = 1. + t1654;
  t1656 = t1655*t1603;
  t1661 = t1652 + t1653 + t1656;
  t1722 = -0.703234*t1620;
  t1698 = -0.104528*t1367*t1379*t1430;
  t1699 = -0.010926102783999999*t1411;
  t1700 = 1. + t1699;
  t1709 = t1700*t1566;
  t1712 = 0.103955395616*t1411*t1603;
  t1717 = t1698 + t1709 + t1712;
  t1735 = -1.0000001112680001*t1411;
  t1737 = 1. + t1735;
  t1742 = t1737*t1367*t1379;
  t1743 = 0.104528*t1430*t1566;
  t1748 = -0.994522*t1430*t1603;
  t1749 = t1742 + t1743 + t1748;
  t1755 = Cos(var1[17]);
  t1759 = -1.*t1755;
  t1761 = 1. + t1759;
  t1763 = Sin(var1[17]);
  t1624 = -0.707107*t1620;
  t1766 = -0.49726168403800003*t1614;
  t1633 = 0.073913*t1620;
  t1801 = -0.051978134642000004*t1614;
  t1688 = 0.707107*t1620;
  t1772 = 0.05226439969100001*t1614;
  t1679 = 0.703234*t1620;
  t1770 = t1766 + t1729;
  t1771 = t1770*t1661;
  t1773 = t1772 + t1722;
  t1778 = t1773*t1717;
  t1779 = -0.500001190325*t1614;
  t1782 = 1. + t1779;
  t1783 = t1782*t1749;
  t1787 = t1771 + t1778 + t1783;
  t1795 = -0.5054634410180001*t1614;
  t1797 = 1. + t1795;
  t1798 = t1797*t1661;
  t1802 = t1801 + t1624;
  t1805 = t1802*t1717;
  t1806 = t1766 + t1633;
  t1807 = t1806*t1749;
  t1810 = t1798 + t1805 + t1807;
  t1836 = t1801 + t1688;
  t1837 = t1836*t1661;
  t1838 = -0.9945383682050002*t1614;
  t1839 = 1. + t1838;
  t1840 = t1839*t1717;
  t1841 = t1772 + t1679;
  t1842 = t1841*t1749;
  t1843 = t1837 + t1840 + t1842;
  t1845 = -0.104528*t1763*t1787;
  t1846 = 0.103955395616*t1761*t1810;
  t1848 = -0.010926102783999999*t1761;
  t1849 = 1. + t1848;
  t1850 = t1849*t1843;
  t1851 = t1845 + t1846 + t1850;
  t1854 = 0.994522*t1763*t1787;
  t1855 = -0.9890740084840001*t1761;
  t1857 = 1. + t1855;
  t1858 = t1857*t1810;
  t1862 = 0.103955395616*t1761*t1843;
  t1863 = t1854 + t1858 + t1862;
  t1865 = -1.0000001112680001*t1761;
  t1866 = 1. + t1865;
  t1868 = t1866*t1787;
  t1869 = -0.994522*t1763*t1810;
  t1870 = 0.104528*t1763*t1843;
  t1871 = t1868 + t1869 + t1870;
  t1426 = -0.056500534356700764*t1411;
  t1439 = -0.3852490428658858*t1430;
  t1444 = t1426 + t1439;
  t1480 = 0.4*t1475;
  t1485 = 0.12*t1484;
  t1489 = t1480 + t1485;
  t1529 = 0.12*t1475;
  t1530 = -0.4*t1484;
  t1532 = t1529 + t1530;
  t1556 = 1.1345904784751044e-7*var1[15];
  t1557 = -0.0402693119526853*t1411;
  t1561 = 0.0059058871981009595*t1430;
  t1562 = t1556 + t1557 + t1561;
  t1899 = t1490*t1502*t1491;
  t1901 = -1.*t1367*t1507;
  t1902 = t1899 + t1901;
  t1905 = t1367*t1490;
  t1906 = t1502*t1491*t1507;
  t1907 = t1905 + t1906;
  t1579 = 1.1924972351948546e-8*var1[15];
  t1586 = 0.3831386486090665*t1411;
  t1587 = -0.05619101817723254*t1430;
  t1599 = t1579 + t1586 + t1587;
  t1610 = -4.0332087336819504e-7*var1[16];
  t1615 = 0.0958179942122405*t1614;
  t1627 = t1616 + t1624;
  t1631 = 0.23105307644*t1627;
  t1634 = t1632 + t1633;
  t1638 = 0.164374659834*t1634;
  t1639 = t1610 + t1615 + t1631 + t1638;
  t1910 = -1.*t1484*t1902;
  t1911 = t1468*t1907;
  t1912 = t1910 + t1911;
  t1915 = t1468*t1902;
  t1916 = t1484*t1907;
  t1918 = t1915 + t1916;
  t1664 = 4.239080549754904e-8*var1[16];
  t1665 = 0.22979114961138278*t1614;
  t1685 = t1666 + t1679;
  t1687 = 0.164374659834*t1685;
  t1689 = t1616 + t1688;
  t1690 = 0.189564637987*t1689;
  t1696 = t1664 + t1665 + t1687 + t1690;
  t1720 = 4.05542127947119e-7*var1[16];
  t1721 = 0.08218752557626696*t1614;
  t1726 = t1666 + t1722;
  t1727 = 0.23105307644*t1726;
  t1730 = t1632 + t1729;
  t1732 = 0.189564637987*t1730;
  t1733 = t1720 + t1721 + t1727 + t1732;
  t1762 = 0.19098732144477495*t1761;
  t1764 = -0.13776101532839094*t1763;
  t1765 = t1762 + t1764;
  t1922 = 0.994522*t1379*t1430*t1502;
  t1923 = 0.103955395616*t1411*t1912;
  t1924 = t1655*t1918;
  t1925 = t1922 + t1923 + t1924;
  t1928 = -0.104528*t1379*t1430*t1502;
  t1930 = t1700*t1912;
  t1931 = 0.103955395616*t1411*t1918;
  t1932 = t1928 + t1930 + t1931;
  t1934 = t1737*t1379*t1502;
  t1936 = 0.104528*t1430*t1912;
  t1938 = -0.994522*t1430*t1918;
  t1939 = t1934 + t1936 + t1938;
  t1790 = -5.06291820800569e-8*var1[17];
  t1792 = 0.13700636048642204*t1761;
  t1793 = 0.18994107176353728*t1763;
  t1794 = t1790 + t1792 + t1793;
  t1818 = -4.817066759205414e-7*var1[17];
  t1830 = -0.014399883410246048*t1761;
  t1833 = -0.019963520514678434*t1763;
  t1834 = t1818 + t1830 + t1833;
  t1941 = t1770*t1925;
  t1942 = t1773*t1932;
  t1943 = t1782*t1939;
  t1944 = t1941 + t1942 + t1943;
  t1947 = t1797*t1925;
  t1948 = t1802*t1932;
  t1951 = t1806*t1939;
  t1953 = t1947 + t1948 + t1951;
  t1958 = t1836*t1925;
  t1961 = t1839*t1932;
  t1962 = t1841*t1939;
  t1963 = t1958 + t1961 + t1962;
  t1965 = -0.104528*t1763*t1944;
  t1966 = 0.103955395616*t1761*t1953;
  t1969 = t1849*t1963;
  t1970 = t1965 + t1966 + t1969;
  t1973 = 0.994522*t1763*t1944;
  t1974 = t1857*t1953;
  t1975 = 0.103955395616*t1761*t1963;
  t1976 = t1973 + t1974 + t1975;
  t1978 = t1866*t1944;
  t1980 = -0.994522*t1763*t1953;
  t1981 = 0.104528*t1763*t1963;
  t1982 = t1978 + t1980 + t1981;
  t1897 = Cos(var2[0]);
  t1445 = t1367*t1379*t1444;
  t1526 = t1489*t1515;
  t1546 = t1532*t1542;
  t1568 = t1562*t1566;
  t1605 = t1599*t1603;
  t1662 = t1639*t1661;
  t1719 = t1696*t1717;
  t1750 = t1733*t1749;
  t1788 = t1765*t1787;
  t1814 = t1794*t1810;
  t1844 = t1834*t1843;
  t1853 = 0.272124*t1851;
  t1864 = 0.167122*t1863;
  t1873 = 0.190987*t1871;
  t1875 = 0.994522*t1851;
  t1876 = 0.104528*t1863;
  t1881 = t1875 + t1876;
  t1885 = -0.07912*t1881;
  t1887 = -0.040001*t1851;
  t1891 = 0.380588*t1863;
  t1892 = 0.92388*t1871;
  t1893 = t1887 + t1891 + t1892;
  t1894 = 0.369*t1893;
  t1895 = var1[0] + t1445 + t1526 + t1546 + t1568 + t1605 + t1662 + t1719 + t1750 + t1788 + t1814 + t1844 + t1853 + t1864 + t1873 + t1885 + t1894;
  t1898 = t1379*t1444*t1502;
  t1903 = t1489*t1902;
  t1909 = t1532*t1907;
  t1914 = t1562*t1912;
  t1920 = t1599*t1918;
  t1926 = t1639*t1925;
  t1933 = t1696*t1932;
  t1940 = t1733*t1939;
  t1946 = t1765*t1944;
  t1957 = t1794*t1953;
  t1964 = t1834*t1963;
  t1971 = 0.272124*t1970;
  t1977 = 0.167122*t1976;
  t1984 = 0.190987*t1982;
  t1985 = 0.994522*t1970;
  t1988 = 0.104528*t1976;
  t1989 = t1985 + t1988;
  t1992 = -0.07912*t1989;
  t1993 = -0.040001*t1970;
  t1994 = 0.380588*t1976;
  t1995 = 0.92388*t1982;
  t1996 = t1993 + t1994 + t1995;
  t1997 = 0.369*t1996;
  t1998 = var1[1] + t1898 + t1903 + t1909 + t1914 + t1920 + t1926 + t1933 + t1940 + t1946 + t1957 + t1964 + t1971 + t1977 + t1984 + t1992 + t1997;
  t1363 = -1.*var1[1];
  t1896 = -1.*t1265*t1895;
  t1999 = t1897*t1998;
  t2001 = t1363 + t1896 + t1999;
  t2004 = -1.*var1[0];
  t2005 = t1897*t1895;
  t2006 = t1265*t1998;
  t2007 = t2004 + t2005 + t2006;
  t2023 = -1.*t1379*t1490*t1484;
  t2024 = t1468*t1379*t1507;
  t2025 = t2023 + t2024;
  t2028 = t1468*t1379*t1490;
  t2029 = t1379*t1484*t1507;
  t2031 = t2028 + t2029;
  t2033 = -0.994522*t1430*t1491;
  t2034 = 0.103955395616*t1411*t2025;
  t2035 = t1655*t2031;
  t2036 = t2033 + t2034 + t2035;
  t2039 = 0.104528*t1430*t1491;
  t2041 = t1700*t2025;
  t2042 = 0.103955395616*t1411*t2031;
  t2044 = t2039 + t2041 + t2042;
  t2046 = -1.*t1737*t1491;
  t2047 = 0.104528*t1430*t2025;
  t2048 = -0.994522*t1430*t2031;
  t2049 = t2046 + t2047 + t2048;
  t2054 = t1770*t2036;
  t2055 = t1773*t2044;
  t2056 = t1782*t2049;
  t2058 = t2054 + t2055 + t2056;
  t2062 = t1797*t2036;
  t2063 = t1802*t2044;
  t2069 = t1806*t2049;
  t2070 = t2062 + t2063 + t2069;
  t2072 = t1836*t2036;
  t2073 = t1839*t2044;
  t2075 = t1841*t2049;
  t2076 = t2072 + t2073 + t2075;
  t2078 = -0.104528*t1763*t2058;
  t2079 = 0.103955395616*t1761*t2070;
  t2080 = t1849*t2076;
  t2081 = t2078 + t2079 + t2080;
  t2084 = 0.994522*t1763*t2058;
  t2085 = t1857*t2070;
  t2086 = 0.103955395616*t1761*t2076;
  t2087 = t2084 + t2085 + t2086;
  t2089 = t1866*t2058;
  t2090 = -0.994522*t1763*t2070;
  t2091 = 0.104528*t1763*t2076;
  t2092 = t2089 + t2090 + t2091;
  p_output1[0]=t1265*t2001 + t1897*t2007;
  p_output1[1]=t1897*t2001 - 1.*t1265*t2007;
  p_output1[2]=t1379*t1489*t1490 - 1.*t1444*t1491 + t1379*t1507*t1532 + t1562*t2025 + t1599*t2031 + t1639*t2036 + t1696*t2044 + t1733*t2049 + t1765*t2058 + t1794*t2070 + t1834*t2076 + 0.272124*t2081 - 0.07912*(0.994522*t2081 + 0.104528*t2087) + 0.167122*t2087 + 0.369*(-0.040001*t2081 + 0.380588*t2087 + 0.92388*t2092) + 0.190987*t2092;
}



void gen::kin::p_left_hand_wrt_base(Eigen::Ref<Eigen::VectorXd> p_output1, const Eigen::Ref<const Eigen::VectorXd> var1,const Eigen::Ref<const Eigen::VectorXd> var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
